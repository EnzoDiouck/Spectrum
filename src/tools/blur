/**
 * @ Author: Your name
 * @ Create Time: 2022-03-15 15:29:05
 * @ Modified by: Your name
 * @ Modified time: 2022-03-15 15:33:50
 * @ Copyright: Antoine ROSPARS - All Rights Reserved - 2022
 */

#include "blur.h"

void
blur (t_bunny_pixelarray *image, int height, int width)

{
  t_bunny_color color1, color2;
  unsigned int *pixels;
  int red;
  int green;
  int blue;
  int counter = 0;

  pixels = image->pixels;
  for (int i = 0; i < height; i++)
    {
      for (int j = 0; j < width; j++)
        {
          red = green = blue = 0;
          counter = 0;
          if (i + 1 < height && j - 1 >= 0)
            {
              red += image[i][j].rgbtRed + image[i + 1][j - 1].rgbtRed;
              green += image[i][j].rgbtGreen + image[i + 1][j - 1].rgbtGreen;
              blue += image[i][j].rgbtBlue + image[i + 1][j - 1].rgbtBlue;
              counter++;
            }
          if (j + 1 < width)
            {
              red += image[i][j].rgbtRed + image[i][j + 1].rgbtRed;
              green += image[i][j].rgbtGreen + image[i][j + 1].rgbtGreen;
              blue += image[i][j].rgbtBlue + image[i][j + 1].rgbtBlue;
              counter++;
            }
          if (i + 1 < height && j + 1 < width)
            {
              red += image[i][j].rgbtRed + image[i + 1][j + 1].rgbtRed;
              green += image[i][j].rgbtGreen + image[i + 1][j + 1].rgbtGreen;
              blue += image[i][j].rgbtBlue + image[i + 1][j + 1].rgbtBlue;
              counter++;
            }
          if (i + 1 < height)
            {
              red += image[i][j].rgbtRed + image[i + 1][j].rgbtRed;
              green += image[i][j].rgbtGreen + image[i + 1][j].rgbtGreen;
              blue += image[i][j].rgbtBlue + image[i + 1][j].rgbtBlue;
              counter++;
            }
          if (j - 1 >= 0)
            {
              red += image[i][j].rgbtRed + image[i][j - 1].rgbtRed;
              green += image[i][j].rgbtGreen + image[i][j - 1].rgbtGreen;
              blue += image[i][j].rgbtBlue + image[i][j - 1].rgbtBlue;
              counter++;
            }
          if (i - 1 >= 0)
            {
              red += image[i][j].rgbtRed + image[i - 1][j].rgbtRed;
              green += image[i][j].rgbtGreen + image[i - 1][j].rgbtGreen;
              blue += image[i][j].rgbtBlue + image[i - 1][j].rgbtBlue;
              counter++;
            }
          new_image[i][j].rgbtRed = red / counter;
          new_image[i][j].rgbtGreen = green / counter;
          new_image[i][j].rgbtBlue = blue / counter;
        }

      return;
    }
}